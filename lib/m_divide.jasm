; ======================================================
; divide
; 
; Performs a division on the values in register r0 and r1. 
; 
; This function subtracts from register r0 until its 
; value is less than register r1. Then returns the result
; in register a. 
; 
; a = r0 / r1
; b = remainder
; r1 = denominator
; 
; labels:
; m_divide
; _m_div_loop
; _m_div_done
; _m_div_return
; 
; author: 
; Michiel Drost - Nullpointer Works
; 
; updated: 
; 05-03-2021
; 
; ======================================================
m_divide:
	push r0
	load a,0			; init division count
	
	cmp r1,0				; if r1 == 0, error
	je _m_div_return
	
	cmp r0,0				; if r0 == 0, return 0
	je _m_div_return
	
_m_div_loop:
	cmp r0,r1
	jl _m_div_done		; if r0 >= r1, subtract for ner0t iteration
	sub r0,r1
	inc a
	jmp _m_div_loop
_m_div_done:
	load b,r0
	
_m_div_return:
	pop r0
	ret
